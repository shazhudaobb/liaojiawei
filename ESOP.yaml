# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]
fusion_mode: bifpn
node_mode: C2f
head_channel: 256
# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 6, EFAM, [512,0.5]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, EFAM, [1024,0.25]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 1, ETA,[]]
head:
  - [2, 1, FSFDown, [head_channel] ] #11  P2->P3
  - [6, 1, Conv, [head_channel]]  #13 -P4/16
  - [10, 1, Conv, [head_channel]]  # 14-P5/32

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] #  P5->P4
  - [[-1, 12], 1, Fusion, [fusion_mode]] #
  - [-1, 3, C2f, [head_channel]] # 16-P4/16

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] #  P4->P3
  - [[-1, 4, 11], 1, Fusion, [fusion_mode]] #50
  - [-1, 3, C2f, [head_channel]] # 19-P3/8

  - [[-1, 4], 1, Fusion, [fusion_mode]] #
  - [-1, 3, C2f, [head_channel]] #22 -P3/8

  - [-1, 1, Conv, [head_channel, 3, 2]] #  P3->P4
  - [[-1, 12, 16], 1, Fusion, [fusion_mode]] #
  - [-1, 3, C2f, [head_channel]] # 26-P4/16

  - [-1, 1, Conv, [head_channel, 3, 2]] #  P4->P5
  - [[-1, 13], 1, Fusion, [fusion_mode]] #
  - [-1, 3, C2f, [head_channel]] # -P5/32

  - [[21, 24, 27], 1, Detect, [nc]]  # Detect(P3, P4, P5)